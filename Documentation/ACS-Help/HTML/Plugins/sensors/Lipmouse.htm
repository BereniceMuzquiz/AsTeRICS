<!doctype html>
<HTML>
	<HEAD>
		<meta charset="UTF-8">
		<Title>Lipmouse</Title>
	</HEAD>
	<body class="innerBody">
		<H1>Lipmouse</H1> 
		<span class="componentType">Component Type: Sensor (Subcategory:Sensor Modules)</span>
		<p>This component provides signals from the <a href="https://github.com/asterics/FLipMouse">FLipmouse</a> module, which is a universal hardware module for alternative computer control and environnmental control.
        The FLipMouse allows computer control via a mouthpiece (i.e. via lips or small finger movements), and can create USB HID input for computers or smart phones (mouse-, keyboard- and joystick emulation). 
		The FlipMouse also includes an infrared receiver and transmitter so that it can record and replay infrared codes of different consumer electronic devices. 
        A user interacts with the FLpiMouse mouthpiece: left/right, up/down and sip/puff. Alternatively, HID actions and IR functions can be controlled via AT-commands (see below). 
		The FLipmouse can be adjusted to work with very low forces so that it can be used by persons with severly reduced motor capabilites. </p>
		<figure>
			<img class="image" src="img/Lipmouse.jpg" alt="Screenshot: Lipmouse plugin" title="Screenshot: Lipmouse plugin" />
			<figcaption>The Lipmouse sensor plugin</figcaption>
		</figure>
		<H2>Requirements</H2>
		The FLipmouse module must be connected to a USB port. Firmware for the FLipmouse sensor can be found in <a href="https://github.com/asterics/FLipMouse">Github</a> repository.
		The free Arduino IDE + Teensyduino can be used to update the firmware of the FLipmouse module. 
		<figure>
			<img class="image" src="img/LipmouseApplication.jpg" alt="Lipmouse sensor application" title="Lipmouse sensor application" />
			<figcaption>FLipmouse application</figcaption>
		</figure>
		<H2>Input Port Description</H2>
		<ul>
			<li><STRONG>AtCmd [string]:</STRONG> many functions of the FLipMouse can be controlled via AT commands, i.e. commands strings which start with 'AT' and are supported by the FLipMouse module.
             For a comprehensive list of supported commands see: <a href="https://github.com/asterics/FLipMouse/blob/master/FLipWare/commands.h">here</a>. The command strings sent to this input port 
             do not need to start with 'AT' and do not need to end with a CR/LF character. For example: if you want to move the mouse 20 steps in x-direction, send 'MX 20' to the input port.</li>
		</ul>
		<H2>Output Port Description</H2>
		<ul>
			<li><STRONG>X [integer]:</STRONG> the force applied to the FLipmouse mouthpiece in x-direction</li>
			<li><STRONG>Y [integer]:</STRONG> the force applied to the FLipmouse mouthpiece in y-direction</li>
			<li><STRONG>pressure [integer]:</STRONG> the pressure value applied to the sip/puff - sensor</li>
		</ul>
		<H2>Event Listener Description</H2>
		<ul>
			<li><STRONG>calibration:</STRONG> if this event is received, the x/y force value is set to 0 (removing any drift of the sensor values)</li>
			<li><STRONG>setLed1:</STRONG> if this event is received, Led1 will be turned on</li>
			<li><STRONG>clearLed1:</STRONG> if this event is received, Led1 will be turned off</li>
			<li><STRONG>setLed2:</STRONG> if this event is received, Led2 will be turned on</li>
			<li><STRONG>clearLed2:</STRONG> if this event is received, Led2 will be turned off</li>
			<li><STRONG>setLed3:</STRONG> if this event is received, Led3 will be turned on</li>
			<li><STRONG>clearLed3:</STRONG> if this event is received, Led3 will be turned off</li>
		</ul>
		<H2>Event Triggerer Description</H2>
		<ul>
			<li><STRONG>sip:</STRONG> will be triggered when pressure decreases under the selected sip treshold and increses back before the selected sipTime has passed</li>
			<li><STRONG>longSip:</STRONG> will be triggered when pressure decreases under the selected sip treshold and increases back after the selected sipTime has passed</li>
			<li><STRONG>sipStart:</STRONG> will be triggered at the moment when pressure decreases under the selected sip treshold</li>
			<li><STRONG>sipEnd:</STRONG> will be triggered at the moment when pressure increases above the selected sip treshold</li>
			<li><STRONG>puff:</STRONG> will be triggered when pressure increases above the selected puff treshold and decreases back before the selected puffTime has passed</li>
			<li><STRONG>longPuff:</STRONG> will be triggered when pressure increases above the selected puff treshold and decreases back after the selected puffTime has passed</li>
			<li><STRONG>puffStart:</STRONG> will be triggered at the moment when pressure increases above the selected puff treshold</li>
			<li><STRONG>puffEnd:</STRONG> will be triggered at the moment when pressure decreases under the selected puff treshold</li>
			<li><STRONG>button1Pressed:</STRONG> will be triggered when button1 of the FLipmouse is pressed</li>
			<li><STRONG>button1Released:</STRONG> will be triggered when button1 of the FLipmouse is released</li>
			<li><STRONG>button2Pressed:</STRONG> will be triggered when button2 of the FLipmouse is pressed</li>
			<li><STRONG>button2Released:</STRONG> will be triggered when button2 of the FLipmouse is released</li>
			<li><STRONG>button3Pressed:</STRONG> will be triggered when button3 of the FLipmouse is pressed</li>
			<li><STRONG>button3Released:</STRONG> will be triggered when button3 of the FLipmouse is released</li>
		</ul>
		<H2>Properties</H2>
		<ul>
			<li><STRONG>uniqueID [integer]:</STRONG> a unique identifier, useful if more then one lipmouse modules are used (dynamic property).</li>
			<li><STRONG>periodicADCUpdate [integer]:</STRONG> the update rate for force and pressure values in milliseconds.</li>
			<li><STRONG>sipThreshold [integer]:</STRONG> threshold value for sip actions.</li>
			<li><STRONG>sipTime [integer]:</STRONG> threshold time for sip/longSip events.</li>
			<li><STRONG>puffThreshold [integer]:</STRONG> threshold value for puff actions.</li>
			<li><STRONG>puffTime [integer]:</STRONG> threshold time for puff/longPuff events.</li>
			<li><STRONG>enableStandaloneFunctions [boolean]:</STRONG> if enabled, the FLipMouse will perform it's normal functions as defined in the FlipMouseGUI settings manager; if disabled, the FlipMouse will only act as sensor for the AsTeRICS plugin.</li>
		</ul>
	</BODY>
</HTML>
