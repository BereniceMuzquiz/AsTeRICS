<!-- This is the bootstrap build file for the whole AsTeRICS framework -->
<project name="asterics" basedir="." default="buildAllNoClean">
	<property name="debug" value="true"/>
	<property name="runtime" location="bin/ARE"/>
	<property name="ACS.bin" location="bin/ACS"/>	
	<property name="web.docroot" location="${runtime}/web/"/>
	<property name="WebACS.bin" location="${web.docroot}/webapps/WebACS"/>

	<target name="clean" description="Clean the whole project" depends="cleanHelpFiles">
		<subant target="clean">
			<fileset dir="ARE" includes="build.xml"> </fileset>
			<fileset dir="ARE_RestAPIlibraries" includes="build.xml"> </fileset>
		</subant>
	</target>
	
	<target name="cleanHelpFiles" description="Cleans the help_files folders in the help folders">
		<delete dir="${web.docroot}/help/help_files/"/>
		<delete dir="${ACS.bin}/help/help_files/"/>
		<delete dir="${WebACS.bin}/help/help_files/"/>
	</target>

	<!-- Build the whole AsTeRICS framework including ACS and help specific tasks  -->
	<target name="buildAllNoClean" description="Build the whole project without prior cleaning">
		<subant target="buildAllNoClean">
			<fileset dir="ARE" includes="build.xml"> </fileset>
			<fileset dir="ARE_RestAPIlibraries" includes="build.xml"> </fileset>
		</subant>
		<!-- TODO: add Copy help files, ACS stuff, CIM stuff,... -->
	</target>
	
	<target name="buildAll" description="Build the whole project with prior cleaning">
		<subant target="buildAll">
			<fileset dir="ARE" includes="build.xml"> </fileset>
			<fileset dir="ARE_RestAPIlibraries" includes="build.xml"> </fileset>
		</subant>
		<!-- TODO: add Copy help files, ACS stuff, CIM stuff,... -->
	</target>

	<target name="buildAll-release" depends="clean, copyHelpFiles" description="Build the whole project with prior cleaning and no debug information. Other steps for a release might be done as well.">
		<subant target="buildAll-release">
			<fileset dir="ARE" includes="build.xml"> </fileset>
			<fileset dir="ARE_RestAPIlibraries" includes="build.xml"> </fileset>
		</subant>
		<!-- TODO: add Copy help files, ACS stuff, CIM stuff,... -->
	</target>
	
	<target name="copyHelpFiles" description="Copy all help files to the webserver document root help path and the legacy ACS.">
		<!-- copy help files for ARE help on ${web.docroot}/help/ -->
		<mkdir dir="${web.docroot}/help/help_files"/>
		<copy todir="${web.docroot}/help/help_files/ARE/" failonerror="true">
		    <fileset dir="Documentation/ACS-Help/HTML/ARE"/>
		</copy>
		<copy todir="${web.docroot}/help/help_files/Plugins/" failonerror="true">
		    <fileset dir="Documentation/ACS-Help/HTML/Plugins"/>
		</copy>
		<copy todir="${web.docroot}/help/help_files/ACS/" failonerror="true">
		    <fileset dir="Documentation/ACS-Help/HTML/ACS"/>
		</copy>
		<copy tofile="${web.docroot}/help/help_files/helpPaths-hosted.json" failonerror="true">
		    <fileset dir="Documentation/ACS-Help/HTML/" includes="helpPaths-hosted.ARE.json"/>
		</copy>
		
		<!-- copy help files (helpPaths-hosted.json) for WebACS help on ${web.docroot}/webapps/WebACS/help/ -->		
		<subant target="copyHelpFiles" failonerror="true">
			<fileset dir="${WebACS.bin}" includes="**/build.xml"></fileset>
		</subant>
		<copy tofile="${WebACS.bin}/help/help_files/helpPaths-hosted.json" failonerror="true" verbose="true" overwrite="true">
		    <fileset dir="Documentation/ACS-Help/HTML/" includes="helpPaths-hosted.WebACS.json"/>
		</copy>
		
		<!-- copy help files for C# ACS help on ${web.docroot}/help/ -->
		<mkdir dir="${ACS.bin}/help/help_files"/>
		<copy todir="${ACS.bin}/help/help_files/ARE/" failonerror="true">
		    <fileset dir="Documentation/ACS-Help/HTML/ARE"/>
		</copy>		
		<copy todir="${ACS.bin}/help/help_files/ACS/" failonerror="true">
		    <fileset dir="Documentation/ACS-Help/HTML/ACS"/>
		</copy>
		<copy todir="${ACS.bin}/help/help_files/Plugins/" failonerror="true">
		    <fileset dir="Documentation/ACS-Help/HTML/Plugins"/>
		</copy>
		<copy todir="${ACS.bin}/help/help_files/" failonerror="true">
		    <fileset file="${ACS.bin}/defaultComponentCollection.abd"/>
		</copy>		
		<copy tofile="${ACS.bin}/help/help_files/helpPaths-local.json" failonerror="true">
		    <fileset dir="Documentation/ACS-Help/HTML/" includes="helpPaths-local.ACS.json"/>
		</copy>		
	</target>
	
	
	<!-- This is the default test target, which calls unit tests -->
	<!-- Is also used by travis ci service to execute tests -->
	<target name="test" description="Execute (unit) tests of the whole project">
		<fileset dir="ARE" includes="build.xml"> </fileset>
		<fileset dir="ARE_RestAPIlibraries" includes="build.xml"> </fileset>
	</target>
	
	<!-- target which helps to find thirdparty libs -->
	<target name="findThirdpartyLibs">
		<fileset id="thirdParty" dir="." casesensitive="no">
			<!--
			<include name="**/src/main/resources/lib/**/*.jar"/>
			<include name="**/src/main/resources/lib/**/*COPY*"/>
			<include name="**/src/main/resources/lib/**/*LICENSE*"/>
			<include name="**/src/main/resources/lib/**/*.so"/>
			<include name="**/src/main/resources/lib/**/*.dll"/>
			-->
			
			<include name="ARE/**/*.jar"/>
			<include name="ARE/**/*COPY*"/>
			<include name="ARE/**/*LICENSE*"/>
			<include name="ARE/**/*THIRDPARTY*"/>
			<include name="ARE/**/*.so"/>
			<include name="ARE/**/*.dll"/>
			
			<exclude name="ARE/**/LICENSE_dual.txt"/>
			<exclude name="ARE/services/*.jar"/>
			<exclude name="ARE/components/*.jar"/>
			<exclude name="**/*Test*"/>
		</fileset>
		<pathconvert refid="thirdParty" property="thirdPartyLibFiles" pathsep="${line.separator}">

			<!-- Cut first 3 dirs of path -->
			<mapper>
				<cutdirsmapper dirs="3"/>
			</mapper>

		</pathconvert>
		<echo file="thirdpartylibfiles.txt">${thirdPartyLibFiles}</echo>
	</target>
	<!-- helper target to replace contents of license files -->
	<target name="findAndReplaceAllLicenseFiles">
		<subant target="findAndReplaceLicenseFile" failonerror="false">
			<fileset dir="." includes="**/build.xml"></fileset>
		</subant>
	</target>
	
	<!-- helper target to rename license files, unfortunately it is not a rename but a move -->
	<target name="renameAllLicenseFiles">
		<subant target="renameLicenseFile" failonerror="false">
			<fileset dir="." includes="**/build.xml"></fileset>
		</subant>
	</target>
	
	<import file="imported.xml"/>
	<include file="included.xml"/>
</project>
